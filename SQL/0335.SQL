/*
** STATUS NOS PAGAMENTOS
*/

SET TERM ^ ;

ALTER TRIGGER PAGAMENTOS_BU100
ACTIVE BEFORE UPDATE POSITION 100
AS
DECLARE VARIABLE DIA_FLUXO INTEGER;
BEGIN

  /* STATUS */
  IF (NEW.PAGO = 0) THEN
   BEGIN
     IF (NEW.ES IN (3, 4)) THEN
       NEW.STATUS = 'LIXEIRA';
     ELSE
       NEW.STATUS = 'ABERTO';
   END ELSE
     NEW.STATUS = 'PAGO';

  /* ANALISE DE VALORES */
  IF (NEW.ES = 1) THEN
    NEW.VALOR_FLUXO = (NEW.TOTAL_PAGO * -1);

  IF (NEW.ES = 2) THEN
    NEW.VALOR_FLUXO = NEW.TOTAL_PAGO;

  /* ANALISE DE DATAS - CADASTRO */
  IF (NEW.DATACADAST IS NOT NULL) THEN
    EXECUTE PROCEDURE ANALISE_DATA(NEW.DATACADAST)
      RETURNING_VALUES
        NEW.CAD_DATA_FLUXO,
        DIA_FLUXO,
        NEW.CAD_SEMANA_FLUXO,
        NEW.CAD_MES_FLUXO,
        NEW.CAD_BIMESTRE_FLUXO,
        NEW.CAD_TRIMESTRE_FLUXO,
        NEW.CAD_QUADRIMESTRE_FLUXO,
        NEW.CAD_SEMESTRE_FLUXO,
        NEW.CAD_ANO_FLUXO,
        NEW.CAD_STR_SEMANA_FLUXO,
        NEW.CAD_STR_MES_FLUXO,
        NEW.CAD_STR_BIMESTRE_FLUXO,
        NEW.CAD_STR_TRIMESTRE_FLUXO,
        NEW.CAD_STR_QUADRIMESTRE_FLUXO,
        NEW.CAD_STR_SEMESTRE_FLUXO;

  /* ANALISE DE DATAS - VENCIMENTO */
  IF (NEW.DATAVENCIMENTO IS NOT NULL) THEN
    EXECUTE PROCEDURE ANALISE_DATA(NEW.DATAVENCIMENTO)
      RETURNING_VALUES
        NEW.VEN_DATA_FLUXO,
        DIA_FLUXO,
        NEW.VEN_SEMANA_FLUXO,
        NEW.VEN_MES_FLUXO,
        NEW.VEN_BIMESTRE_FLUXO,
        NEW.VEN_TRIMESTRE_FLUXO,
        NEW.VEN_QUADRIMESTRE_FLUXO,
        NEW.VEN_SEMESTRE_FLUXO,
        NEW.VEN_ANO_FLUXO,
        NEW.VEN_STR_SEMANA_FLUXO,
        NEW.VEN_STR_MES_FLUXO,
        NEW.VEN_STR_BIMESTRE_FLUXO,
        NEW.VEN_STR_TRIMESTRE_FLUXO,
        NEW.VEN_STR_QUADRIMESTRE_FLUXO,
        NEW.VEN_STR_SEMESTRE_FLUXO;

  /* ANALISE DE DATAS - PAGAMENTO */
  IF (NEW.DATAPAGO IS NOT NULL) THEN
    EXECUTE PROCEDURE ANALISE_DATA(NEW.DATAPAGO)
      RETURNING_VALUES
        NEW.PAG_DATA_FLUXO,
        DIA_FLUXO,
        NEW.PAG_SEMANA_FLUXO,
        NEW.PAG_MES_FLUXO,
        NEW.PAG_BIMESTRE_FLUXO,
        NEW.PAG_TRIMESTRE_FLUXO,
        NEW.PAG_QUADRIMESTRE_FLUXO,
        NEW.PAG_SEMESTRE_FLUXO,
        NEW.PAG_ANO_FLUXO,
        NEW.PAG_STR_SEMANA_FLUXO,
        NEW.PAG_STR_MES_FLUXO,
        NEW.PAG_STR_BIMESTRE_FLUXO,
        NEW.PAG_STR_TRIMESTRE_FLUXO,
        NEW.PAG_STR_QUADRIMESTRE_FLUXO,
        NEW.PAG_STR_SEMESTRE_FLUXO;

END
^

SET TERM ; ^

SET TERM ^ ;

ALTER TRIGGER PAGAMENTOS_BU0
INACTIVE BEFORE UPDATE POSITION 0
AS
DECLARE VARIABLE ULTIMO     INTEGER;
DECLARE VARIABLE SALDO      NUMERIC(9, 2);
DECLARE VARIABLE SALDONOVO  NUMERIC(9, 2);
BEGIN

  /* CARREGO AS OPCOES DO DOCUMENTO */
  SELECT
    TIPO_PAG,
    TIPO_DOC
  FROM
    DOCUMENTOS
  WHERE
    CODIGO = NEW.CODDOCUMENTO
  INTO
    NEW.TIPO_PAG,
    NEW.TIPO_DOC;

  /* FOI ESTORNADO? */
  IF (NEW.ESTORNO_CODUSUARIO IS NOT NULL) THEN
   BEGIN

     SELECT
       NOMEUSER
     FROM
       CLIENTES
     WHERE
       CODIGO = NEW.ESTORNO_CODUSUARIO
     INTO
       NEW.ESTORNO_NOMEUSER;

   END

  /* ESTA PAGO? */
  IF ((OLD.PAGO = 0) AND (NEW.PAGO = 1)) THEN
   BEGIN

     /* DESCUBRO O SALDO ANTERIOR */
     SELECT
       MAX(CODLANCTO)
     FROM
       PAGAMENTOS
     WHERE
       CODCONTA = NEW.CODCONTA AND
       CODEMPRESA = NEW.CODEMPRESA
     INTO
       :ULTIMO;

     IF (ULTIMO IS NOT NULL) THEN
      BEGIN

        SELECT
          SALDOATU
        FROM
          PAGAMENTOS
        WHERE
          CODLANCTO = :ULTIMO
        INTO
          :SALDO;

      END ELSE SALDO = 0;

     /* PEGO O NUMERO DESTE LANCAMENTO */
     SELECT
       SEQUENCIA
     FROM
       SEQ_OBTER('LANCTO')
     INTO
       :ULTIMO;

     /* GRAVO OS VALORES CORRETOS */
     NEW.SALDOANT = SALDO;

     IF (NEW.ES = 1) THEN
       SALDONOVO = SALDO - NEW.TOTAL_PAGO;

     IF (NEW.ES = 2) THEN
       SALDONOVO = SALDO + NEW.TOTAL_PAGO;

     NEW.SALDOATU = SALDONOVO;
     NEW.DATAPAGO = 'NOW';
     NEW.CODLANCTO = ULTIMO;

   END
END
^

SET TERM ; ^

UPDATE
  PAGAMENTOS
SET
  ARQUIVO = '';
  
SET TERM ^ ;

ALTER TRIGGER PAGAMENTOS_BU0
ACTIVE BEFORE UPDATE POSITION 0
AS
DECLARE VARIABLE ULTIMO     INTEGER;
DECLARE VARIABLE SALDO      NUMERIC(9, 2);
DECLARE VARIABLE SALDONOVO  NUMERIC(9, 2);
BEGIN

  /* CARREGO AS OPCOES DO DOCUMENTO */
  SELECT
    TIPO_PAG,
    TIPO_DOC
  FROM
    DOCUMENTOS
  WHERE
    CODIGO = NEW.CODDOCUMENTO
  INTO
    NEW.TIPO_PAG,
    NEW.TIPO_DOC;

  /* FOI ESTORNADO? */
  IF (NEW.ESTORNO_CODUSUARIO IS NOT NULL) THEN
   BEGIN

     SELECT
       NOMEUSER
     FROM
       CLIENTES
     WHERE
       CODIGO = NEW.ESTORNO_CODUSUARIO
     INTO
       NEW.ESTORNO_NOMEUSER;

   END

  /* ESTA PAGO? */
  IF ((OLD.PAGO = 0) AND (NEW.PAGO = 1)) THEN
   BEGIN

     /* DESCUBRO O SALDO ANTERIOR */
     SELECT
       MAX(CODLANCTO)
     FROM
       PAGAMENTOS
     WHERE
       CODCONTA = NEW.CODCONTA AND
       CODEMPRESA = NEW.CODEMPRESA
     INTO
       :ULTIMO;

     IF (ULTIMO IS NOT NULL) THEN
      BEGIN

        SELECT
          SALDOATU
        FROM
          PAGAMENTOS
        WHERE
          CODLANCTO = :ULTIMO
        INTO
          :SALDO;

      END ELSE SALDO = 0;

     /* PEGO O NUMERO DESTE LANCAMENTO */
     SELECT
       SEQUENCIA
     FROM
       SEQ_OBTER('LANCTO')
     INTO
       :ULTIMO;

     /* GRAVO OS VALORES CORRETOS */
     NEW.SALDOANT = SALDO;

     IF (NEW.ES = 1) THEN
       SALDONOVO = SALDO - NEW.TOTAL_PAGO;

     IF (NEW.ES = 2) THEN
       SALDONOVO = SALDO + NEW.TOTAL_PAGO;

     NEW.SALDOATU = SALDONOVO;
     NEW.DATAPAGO = 'NOW';
     NEW.CODLANCTO = ULTIMO;

   END
END
^

SET TERM ; ^

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (335, CURRENT_TIMESTAMP);
COMMIT;

