/*
** REAJUSTE PROGRAMATICO
*/

SET TERM ^ ;

CREATE PROCEDURE REAJUSTE (
    CODMARCA INTEGER,
    PORCENTAGEM DECIMAL(9,4))
AS
DECLARE VARIABLE MARGEM1 DECIMAL(9,4);
DECLARE VARIABLE MARGEM2 DECIMAL(9,4);
DECLARE VARIABLE MARGEM3 DECIMAL(9,4);
DECLARE VARIABLE CUSTONOVO DECIMAL(9,3);
DECLARE VARIABLE CODPRODUTO INTEGER;
DECLARE VARIABLE CUSTO DECIMAL(9,3);
DECLARE VARIABLE VENDA1 DECIMAL(9,3);
DECLARE VARIABLE VENDA2 DECIMAL(9,3);
DECLARE VARIABLE VENDA3 DECIMAL(9,3);
BEGIN

  /* PRODUTOS DA MARCA */
  FOR
  SELECT
    PRODUTOS.CODIGO,
    PRODUTOS.PRECOCUSTO,
    PRODUTOS.PRECOVENDA,
    PRODUTOS.PRECOVENDA2,
    PRODUTOS.PRECOVENDA3
  FROM
    PRODUTOS
  WHERE
    PRODUTOS.CODMARCA = :CODMARCA
  INTO
    :CODPRODUTO,
    :CUSTO,
    :VENDA1,
    :VENDA2,
    :VENDA3
  DO
  BEGIN

    /* PRECO DE CUSTO EXISTE? */
    IF (CUSTO > 0) THEN
     BEGIN

       /* NOVO CUSTO */
       CUSTONOVO = CUSTO * ((PORCENTAGEM / 100) + 1);

       /* PRECO DE VENDA 1 */
       IF (VENDA1 > 0) THEN
        BEGIN
          MARGEM1 = ((VENDA1 / CUSTO) - 1) * 100;
          VENDA1 = CUSTONOVO * ((MARGEM1 / 100) + 1);
        END

       /* PRECO DE VENDA 2 */
       IF (VENDA2 > 0) THEN
        BEGIN
          MARGEM2 = ((VENDA2 / CUSTO) - 1) * 100;
          VENDA2 = CUSTONOVO * ((MARGEM2 / 100) + 1);
        END

       /* PRECO DE VENDA 3 */
       IF (VENDA3 > 0) THEN
        BEGIN
          MARGEM3 = ((VENDA3 / CUSTO) - 1) * 100;
          VENDA3 = CUSTONOVO * ((MARGEM3 / 100) + 1);
        END

       /* REAJUSTE */
       UPDATE
         PRODUTOS
       SET
         PRODUTOS.PRECOCUSTO  = :CUSTONOVO,
         PRODUTOS.PRECOVENDA  = :VENDA1,
         PRODUTOS.PRECOVENDA2 = :VENDA2,
         PRODUTOS.PRECOVENDA3 = :VENDA3
       WHERE
         PRODUTOS.CODIGO = :CODPRODUTO;

     END

  END

END
^

SET TERM ; ^

GRANT EXECUTE ON PROCEDURE REAJUSTE TO PUBLIC;

SET TERM ^ ;

CREATE PROCEDURE SITTRIBUICMS (
    CODPRODUTO INTEGER,
    SITTRIBUTARIA CHAR(3),
    ICMSVENDA DECIMAL(9,4))
AS
BEGIN

  /* ATUALIZO O TEMPITENS */
  UPDATE
    TEMPITENS
  SET
    TEMPITENS.SITTRIBU = :SITTRIBUTARIA,
    TEMPITENS.ICMSVENDA = :ICMSVENDA
  WHERE
    TEMPITENS.CODPRODUTO = :CODPRODUTO;

  /* ATUALIZO O INDIVIDUAIS */
  UPDATE
    INDIVIDUAIS
  SET
    INDIVIDUAIS.ICMSVENDA = :ICMSVENDA
  WHERE
    INDIVIDUAIS.CODPRODUTO = :CODPRODUTO;

END
^

SET TERM ; ^

GRANT EXECUTE ON PROCEDURE SITTRIBUICMS TO PUBLIC;

SET TERM ^ ;

ALTER PROCEDURE SITTRIBUICMS (
    CODPRODUTO INTEGER,
    SITTRIBUTARIA CHAR(3),
    ICMSVENDA DECIMAL(9,4),
    CODEMPRESA INTEGER)
AS
BEGIN

  /* ATUALIZO O TEMPITENS */
  UPDATE
    TEMPITENS
  SET
    TEMPITENS.SITTRIBU = :SITTRIBUTARIA,
    TEMPITENS.ICMSVENDA = :ICMSVENDA
  WHERE
    TEMPITENS.CODPRODUTO = :CODPRODUTO;

  /* ATUALIZO O INDIVIDUAIS */
  UPDATE
    INDIVIDUAIS
  SET
    INDIVIDUAIS.ICMSVENDA = :ICMSVENDA
  WHERE
    INDIVIDUAIS.CODPRODUTO = :CODPRODUTO AND
    INDIVIDUAIS.CODEMPRESA = :CODEMPRESA;

END
^

SET TERM ; ^

SET TERM ^ ;

ALTER TRIGGER tempitens_befupd01
active before update position 0
AS
DECLARE VARIABLE BARRA CHAR(14);
DECLARE VARIABLE TIPO INTEGER;
DECLARE VARIABLE ES INTEGER;
DECLARE VARIABLE FECHADO CHAR(1);
BEGIN

  /* VERIFICO O TIPO DO MOVIMENTO */
  SELECT
    ES,
    TIPO,
    FECHADO
  FROM
    MOVIMENTOS
  WHERE
    CODIGO = NEW.CODMOVIMENTO
  INTO
    :ES,
    :TIPO,
    :FECHADO;

  IF ((ES IN (0, 1)) AND (TIPO <> 9)) THEN
   BEGIN

     /* VERIFICO SE EXISTE CÓDIGO DE BARRAS VÁLIDO */
     SELECT
       BARRA
     FROM
       PRODUTOS
     WHERE
       CODIGO = NEW.CODPRODUTO
     INTO
       :BARRA;

     IF (BARRA = '0000000000000') THEN
        EXCEPTION BARRA_NECESSARIA;

   END

END
^

SET TERM ; ^



INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (435, CURRENT_TIMESTAMP);
COMMIT;
