/*
** BASE DE CALCULO DO ICMS EM PORCENTAGEM / TIODONDON II
**********************************************************
** DESCONECTAR E CONECTAR DO BANCO DE DADOS DEPOIS
**********************************************************
*/

SET TERM ^ ;

CREATE TRIGGER INDIVIDUAIS_BI0 FOR INDIVIDUAIS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  /* VALOR_ICMS */
  NEW.VALOR_ICMS =
   ((NEW.VALOR_VENDA - NEW.DESCONTO) *
   (NEW.ICMSVENDA / 100) * NEW.QUANTIDADE);
  IF (NEW.VALOR_ICMS IS NULL) THEN
    NEW.VALOR_ICMS = 0;
END
^

SET TERM ; ^

SET TERM ^ ;

ALTER TRIGGER INDIVIDUAIS_BU0
ACTIVE BEFORE UPDATE POSITION 0
AS
  DECLARE VARIABLE ICMSSIMPLES CHAR(1);
  DECLARE VARIABLE ALIQUOTA_ICMSSIMPLES NUMERIC(9, 4);
  DECLARE VARIABLE ALIQUOTA_ISS NUMERIC(9, 4);
  DECLARE VARIABLE VALOR_ICMSCOMPRA NUMERIC(9, 2);
  DECLARE VARIABLE VALOR_ICMSVENDA NUMERIC(9, 2);
  DECLARE VARIABLE QUANTIDADE NUMERIC(9, 2);
  DECLARE VARIABLE BASE_ICMS NUMERIC(9, 2);
  DECLARE VARIABLE XICMS CHAR(1);
BEGIN

  /* ESTE TRIGGER CALCULA OS IMPOSTOS DE VENDA E VERIFICA A QUANTIDADE */

  /* VERIFICAÇÃO DA QUANTIDADE */
  IF ((NEW.QUANTIDADE IS NULL) OR (NEW.QUANTIDADE = 0)) THEN
    EXCEPTION QUANTIDADE_POSITIVA;

  /* FOI VENDIDO O ITEM? */
  IF ((OLD.VENDIDO = 'N') AND (NEW.VENDIDO = 'S')) THEN
   BEGIN

     /* PRODUTO OU SERVIÇO? */
     IF (NEW.PS = 'P') THEN
      BEGIN

        /* PRODUTO */

        /* DADOS DO ICMS DA EMPRESA */
        SELECT
          ALIQUOTA_ICMSSIMPLES,
          ICMSSIMPLES
        FROM
          SISCONFIG
        WHERE
          CODIGO = NEW.CODEMPRESA
        INTO
          :ALIQUOTA_ICMSSIMPLES,
          :ICMSSIMPLES;

        /* ICMS É SIMPLES OU SUBTRAÇÃO? */
        IF (ICMSSIMPLES = 'S') THEN
         BEGIN

           /* ICMS SIMPLES */
           /* O ICMS É UMA CONSTANTE */
           NEW.ICMSVENDA = ALIQUOTA_ICMSSIMPLES;
           /* SOMENTE APLICAR A ALIQUOTA */
           NEW.CUSTO_ICMS =
             (NEW.VALOR_PAGO / NEW.QUANTIDADE) *
             (ALIQUOTA_ICMSSIMPLES / 100);
           NEW.VALOR_ICMS =
             ((NEW.VALOR_VENDA - NEW.DESCONTO) *
              (NEW.ICMSVENDA / 100) * NEW.QUANTIDADE);

         END ELSE
         BEGIN

           /* ICMS DE SUBTRAÇÃO */

           /* RECUPERO A BASE DE CALCULO */
           SELECT
             PO.ICMS_BASE
           FROM
             PRODUTOS PO
           WHERE
             PO.CODIGO = NEW.CODPRODUTO
           INTO
             BASE_ICMS;

           IF (BASE_ICMS IS NULL) THEN
             BASE_ICMS = 100;
           ELSE
             BASE_ICMS = (BASE_ICMS / 100);

           NEW.VALOR_ICMS =
             (((NEW.VALOR_VENDA - NEW.DESCONTO) * BASE_ICMS) *
              (NEW.ICMSVENDA / 100) * NEW.QUANTIDADE);

           /* RECUPERO O CUSTO DE ICMS DA COMPRA */
           SELECT
             VALOR_ICMSCOMPRA,
             QUANTIDADE
           FROM
             TEMPITENS
           WHERE
             CODIGO = NEW.CODITEM AND
             CODMOVIMENTO = NEW.CODMOVENTRADA AND
             CODPRODUTO = NEW.CODPRODUTO
           INTO
             :VALOR_ICMSCOMPRA,
             :QUANTIDADE;

           /* CALCULO SOMENTE O ITEM COMPRADO */
           IF (VALOR_ICMSCOMPRA IS NULL) THEN
             VALOR_ICMSCOMPRA = 0;
           VALOR_ICMSCOMPRA = (VALOR_ICMSCOMPRA / QUANTIDADE);

           /* CALCULO SOMENTE O ITEM VENDIDO */
           VALOR_ICMSVENDA =
             (NEW.VALOR_ICMS / NEW.QUANTIDADE);

           /* APLICO O RESULTADO DA SUBTRAÇÃO */
           NEW.CUSTO_ICMS =
             (VALOR_ICMSVENDA - VALOR_ICMSCOMPRA);

         END

         /* BLOQUEIO DE ICMS */
         SELECT
           NA.ICMS
         FROM
           NATUOPER NA
           JOIN MOVIMENTOS MO ON
             (MO.NOTA_CODNATUOPER = NA.CODIGO)
         WHERE
           MO.CODIGO = NEW.CODMOVSAIDA
         INTO
           :XICMS;

         IF (XICMS = 'N') THEN
           NEW.ICMSVENDA = 0;


      END ELSE
      BEGIN

        /* SERVIÇO */

        /* RECUPERO A ALIQUOTA DO ISS DA EMPRESA */
        SELECT
          ALIQUOTA_ISS
        FROM
          SISCONFIG
        WHERE
          CODIGO = NEW.CODEMPRESA
        INTO
          :ALIQUOTA_ISS;

        /* APLICO A ALIQUOTA PARA 1 ITEM */
        NEW.CUSTO_ISS =
          (NEW.VALOR_PAGO / NEW.QUANTIDADE) *
          (ALIQUOTA_ISS / 100);

      END

   END /* VENDIDO? */

END
^

SET TERM ; ^

SET TERM ^ ;

ALTER PROCEDURE CALC_ICMS (
    CODMOVIMENTO INTEGER)
RETURNS (
    VALOR_ICMS NUMERIC(9,2),
    VALOR_IPI NUMERIC(9,2),
    BASE_ICMS NUMERIC(9, 2))
AS
DECLARE VARIABLE VALOR_PAGO NUMERIC(9,2);
DECLARE VARIABLE IPI NUMERIC(9,2);
DECLARE VARIABLE XIPI CHAR(1);
BEGIN
  SELECT
    SUM(ID.VALOR_ICMS),
    SUM(ID.VALOR_PAGO),
    SUM(ID.VALOR_PAGO * (PO.ICMS_BASE / 100)),
    MAX(IT.IPI)
  FROM
    INDIVIDUAIS ID
    JOIN TEMPITENS IT ON
      (IT.CODIGO = ID.CODITEM)
    JOIN PRODUTOS PO ON
      (PO.CODIGO = ID.CODPRODUTO)
  WHERE
    ID.CODMOVSAIDA = :CODMOVIMENTO AND
    ID.VENDIDO = 'S' AND
    ID.PS = 'P'
  INTO
    :VALOR_ICMS,
    :VALOR_PAGO,
    :BASE_ICMS,
    :IPI;

  VALOR_IPI = VALOR_PAGO * (IPI / 100);

  /* VERIFICO IPI */
  SELECT
    NA.IPI
  FROM
    NATUOPER NA
    JOIN MOVIMENTOS MO ON
      (MO.NOTA_CODNATUOPER = NA.CODIGO)
  WHERE
    MO.CODIGO = :CODMOVIMENTO
  INTO
    :XIPI;

  IF (XIPI IS NULL) THEN
    XIPI = 'N';

  IF ((VALOR_IPI IS NULL) OR (XIPI = 'N')) THEN
    VALOR_IPI = 0;

  IF (VALOR_ICMS IS NULL) THEN
    VALOR_ICMS = 0;

  SUSPEND;
END
^

SET TERM ; ^

UPDATE RDB$RELATION_FIELDS SET
RDB$FIELD_SOURCE = 'DINHEIRO'
WHERE (RDB$FIELD_NAME = 'NOTA_BASEICMS') AND
(RDB$RELATION_NAME = 'MOVIMENTOS');

INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (348, CURRENT_TIMESTAMP);
COMMIT;

